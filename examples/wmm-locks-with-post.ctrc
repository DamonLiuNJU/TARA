global: nondet_int m x y z balance lock w_finished d_finished

pre: (and (= balance x) (> y 0) (> z 0) (= lock 0) (= w_finished 0) (= d_finished 0))

thread withdraw_thread { withdraw_thread::l2 }:
a1: assume(= lock 0)
a2: (= lock. 1)
a3: (= |withdraw_thread::l2.| balance)
a4: (= balance. (- |withdraw_thread::l2| z))
a5: (= lock. 0)
a6: (= w_finished. 1)

thread deposit_thread { deposit_thread::l }:
b1: assume(= lock 0)
b2: (= lock. 2)
b3: (= |deposit_thread::l.| balance)
b4: (= balance. (+ |deposit_thread::l| y))
b5: (= lock. 0)
b6: (= d_finished. 1)

post: (implies (and (= d_finished 1) (= w_finished 1) ) (= balance (- (+ x y) z)) )
# post: (= balance (- (+ x y) z))

# Bugs: DR

################################################
#! -M sc
################################################
#~
##
##Final result
##Bad DNF
##( hb(R#pi_balance#d1,W#balance#w2) ∧ hb(R#pi_balance#w1,W#balance#d2) ) 
##
#~


################################################
#! -M tso
################################################
#~
##
##Final result
##Bad DNF
##( hb(R#pi_balance#d1,W#balance#w2) ∧ hb(R#pi_balance#w1,W#balance#d2) ) 
##
#~


################################################
#! -M pso
################################################
#~
##
##Final result
##Bad DNF
##( hb(R#pi_balance#d1,W#balance#w2) ∧ hb(R#pi_balance#w1,W#balance#d2) ) 
##
#~


################################################
#! -M rmo
################################################
#~
##
##Final result
##Bad DNF
##( hb(R#pi_balance#d1,W#balance#w2) ∧ hb(R#pi_balance#w1,W#balance#d2) ) 
##
#~

