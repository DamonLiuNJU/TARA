###Dekker###

global: flag1 flag2 turn cs finished1 finished2

pre: (and (= flag1 0) (= flag2 0) (= cs 0) (= finished1 0) (= finished2 0))

thread P0 {r0 r1 r2}:
w1 : (= flag1. 1)
# w2 : (= r0. flag2)
# w3 : assume(= r0 1)
# w7 : (= r1. turn)
# w8 : assume(= r1 0)
w10 : (= r2. flag2)
w11: assume(not (= r2 1))
w12: (= cs. (+ cs 1))
w13: (= turn. 1)
# wf: barrier
w14: (= flag1. 0)
w15: (= finished1. 1)

thread P1 {r3 r4 r5 r6 r7}:
d1 : (= flag2. 1)
# d2 : (= r3. flag1)
# d3 : assume(= r3 1)
# d4 : (= r4. turn)
# d5 : assume(not (= r4 1))
# d6 : (= flag2. 0)
# d7 : (= r5. turn)
# d8 : assume(= r5 1)
# d9 : (= flag2. 1)
d10: (= r6. flag1)
d11: assume(not (= r6 1))
d12: (= cs. (+ cs 1))
d13: (= turn. 0)
d14: (= flag2. 0)
d15: (= finished2. 1)

post: (implies (and (= finished1 1) (= finished2 1)) (= cs 2) )


#(implies (and (= P0.r0 1) (= P0.r1 0) (not (= P0.r2 1)) (= P1.r3 1) (not (= P1.r4 1)) (= P1.r5 1) (not (= P1.r6 1))) (= cs 2) )





        

#-r diffvar,unsat_core,remove_implied -M pso